import cv2

def generateFontRom():
    #~ strName = "Anonymous.png"
    #~ strName = "lucidagrande.jpg"
    #~ strName = "tut4-2.png"
    #~ strName = "Atarifont.png"
    strName = "terminal8x8_gs_as.png"    
    im = cv2.imread( "data/" + strName)
    imdraw = cv2.imread( "data/" + strName)
    
    bInvertPlacing = 0
    
    if( strName == "Anonymous.png" ):
        ox = 0; # origin
        oy = 3;
        sx=26; # size letter
        sy=32;
        ex = 1; # size interletter
        ey = 24;

    if( strName == "tut4-2.png" ):
        bHalf = 1
        if(bHalf):
            im = cv2.pyrDown( im ); # PyrDown only divide by 2
        ox = 0; # origin
        oy = 0;
        sx=16; # size letter
        sy=16;
        ex = 0; # size interletter
        ey = 0;

        if( bHalf):
            sx/=2;
            sy/=2;
            
    if( strName == "Atarifont.png" ):
            ox = 0; # origin
            oy = 0;
            sx = 8; # size letter
            sy = 16;
            ex = 0; # size interletter
            ey = 0; 

    if( strName == "terminal8x8_gs_as.png" ):
            ox = 0; # origin
            oy = 0;
            sx = 8; # size letter
            sy = 8;
            ex = 0; # size interletter
            ey = 0; 
            bInvertPlacing = 1
            
    
    bRender = 1
    
    nNbrLetterOutputed = 0;
    strOut = "// generated by generate_font.py using %s\n" % strName;
    strOut += "unsigned char aLetters[] = {\n";
    for k in range(16):
        for l in range(16):
            j = k
            i = l
            if( bInvertPlacing ):
                i = k
                j = l
            x = ox+i*(sx+ex);
            y = oy+j*(sy+ey);
            nNumLetter = j*16+i;
            if( bInvertPlacing ):
                nNumLetter = i*16+j;
            
            if( nNumLetter>=ord('0')  and nNumLetter <= ord('z') ):
                strOut += "// %d,%d: idx: %d, abs: %d: '%s'\n" % (i,j,nNbrLetterOutputed,nNumLetter,chr(nNumLetter));
                for jj in range(sy):
                    for ii in range(sx):
                        val = im[y+jj,x+ii]
                        #print( "val: %s" % val );
                        val = val[0] # only R
                        strOut += "0x%02X, " % val;
                    strOut += "\n" % val;
                nNbrLetterOutputed +=1;                    
                if( bRender ):
                    cv2.rectangle( imdraw, (x, y), (x+sx, y+sy), (0,0,255));
    
    if(bRender):
        cv2.imshow( "imdraw", imdraw );
        cv2.waitKey(0);
        
    strOut += "};\n";
    strOut += "// %d letters outputted = %dko\n" % (nNbrLetterOutputed,nNbrLetterOutputed*sx*sy);
        
    print strOut;
    
    file = open("/tmp/fonts.c", "wt" );
    file.write( strOut );
    file.close();
    
    file = open("/tmp/fonts.h", "wt" );
    
    strOut = "";
    strOut += "#ifndef FONTS_H\n"
    strOut += "#define FONTS_H\n";
    strOut += "extern unsigned char aLetters[]; // putting unsigned char * generate an error: aLetters is set to 0\n";
    strOut += "#define LETTER_SIZE_X %d\n" % sx;
    strOut += "#define LETTER_SIZE_Y %d\n" % sy;
    strOut += "#define LETTER_NBR %d\n" % nNbrLetterOutputed;
    strOut += "#define LETTER_FIRST '%c'\n" % ord('0');
    strOut += "#endif // FONTS_H\n";
    file.write( strOut );
    file.close();

    
# generateFontRom - end
    
    
    
    
generateFontRom();