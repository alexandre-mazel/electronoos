<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                        <Box name="movelegs &amp; head code" id="8" localization="8" tooltip="" x="292" y="320">
                            <bitmap>media/images/box/box-python-script.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[import time
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.mot = ALProxy("ALMotion")

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
    # head pitch a -1.2deg et ankle pitch a 3deg, kneepitch a 6.3, shoulder pitcha 81.9
    # shoulder a 67 c'est encore miex.
        bHead = 0
        bHead = 1

        rHead = +0.1  # sens de respiration naturel
        # rHead = -0.1 # send pour se balancer

        rHead *= 2

        rTimePause = 0.5
        rTimePause = 1.
        rTimePause = 1.5-0.1-0.1
        rTimePause = 0.6

        rMoveHip = 0.05*1.5*3
        rMoveHip *=1.2
        rTimeHip = 2.5

        if bHead: self.mot.post.angleInterpolation(["HeadPitch"],[-rHead],rTimeHip,False)
        self.mot.angleInterpolation(["RHipPitch","LHipPitch"],[-rMoveHip,-rMoveHip],rTimeHip,False)
        time.sleep(rTimePause)
        if bHead: self.mot.post.angleInterpolation(["HeadPitch"],[+rHead],rTimeHip,False)
        self.mot.angleInterpolation(["RHipPitch","LHipPitch"],[+rMoveHip,+rMoveHip],rTimeHip,False)
        time.sleep(rTimePause)
        self.onStopped() #activate the output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        </Box>
                        <Link inputowner="8" indexofinput="2" outputowner="8" indexofoutput="4" />
                        <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
