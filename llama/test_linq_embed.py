from sentence_transformers import SentenceTransformer # pip install sentence_transformers

# from git clone https://huggingface.co/Linq-AI-Research/Linq-Embed-Mistral
print("INF: loading model...")
# Load the model
model = SentenceTransformer("Linq-AI-Research/Linq-Embed-Mistral")

# Each query must come with a one-sentence instruction that describes the task
task = 'Given a question, retrieve Wikipedia passages that answer the question'
prompt = f"Instruct: {task}\nQuery: "
queries = [
    "??? ??? ???? ?????",
    "Who invented Hangul?"
]
passages = [
    "?? ???? ??? ??? ??? ????? 1948? 9? ?? ???? ????? ??? X-10 ??????? ??? ?? ??? ? ????? ?????. ??? 1954? 6?? ???? ?????? ??? ???? ???? ???? ???? ??? ????? ??? ???? ????? ????? ?????, ??? ??? ??? ????? ??? ?? ???? ??? ??? ??? ?? ?(Calder Hall) ??? ????, 1956? 10? 17? ?? ??? ?????.",
    "Hangul was personally created and promulgated by the fourth king of the Joseon dynasty, Sejong the Great.[1][2] Sejong's scholarly institute, the Hall of Worthies, is often credited with the work, and at least one of its scholars was heavily involved in its creation, but it appears to have also been a personal project of Sejong."
]

print("INF: encoding...")
# Encode the queries and passages. We only use the prompt for the queries
query_embeddings = model.encode(queries, prompt=prompt)
passage_embeddings = model.encode(passages)

# Compute the (cosine) similarity scores
scores = model.similarity(query_embeddings, passage_embeddings) * 100
print(scores.tolist())
# [[53.954689025878906, 39.07584762573242], [24.889484405517578, 79.25373077392578]]
